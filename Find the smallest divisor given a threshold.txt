class Solution {
public:
    int BS(int x,vector<int>nums,int threshold){
        int sum=0;
        for(int i=0;i<nums.size();i++){
         sum=sum+ceil((nums[i]*1.0)/(float)x);  
        }
        cout<<sum<<" "<<x<<endl;
        if(sum>threshold){
            return 1;}
        return 0;
    }
    int smallestDivisor(vector<int>& nums, int threshold) {
        int a=1;
        int b=*max_element(nums.begin(),nums.end());
        while(a<b){
            int mid=(b+a)/2;
            int c=BS(mid,nums,threshold);
            cout<<a<<" "<<b<<" "<<c<<endl;
            if(c==1){
                a=mid+1;
            }
            else{
                b=mid;
            }
        }
        return a;
    }
};