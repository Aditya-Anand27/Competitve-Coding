class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& A) {
        vector<vector<int>>B;
        for(int i=0;i<A.size();i++){
            vector<int>C;
            C.clear();
            B.push_back(C);
        }
        for(int i=0;i<A.size();i++){
            for(int j=0;j<A.size();j++){
                B[i].push_back(A[i][j]);
            }
        }
        for(int i=0;i<A.size();i++){
            for(int j=0;j<A[0].size();j++){
               if(i==0){
               B[i][j]=A[i][j];  
               }
                else{
                    if(j==0)
                    B[i][j]=min(B[i-1][j],B[i-1][j+1])+A[i][j];
                    else if(j==A.size()-1)
                    B[i][j]=min(B[i-1][j],B[i-1][j-1])+A[i][j];
                    else{
                        B[i][j]=min(B[i-1][j],min(B[i-1][j-1],B[i-1][j+1]))+A[i][j];
                    }
                }
            }
        }
        return *min_element(B[A.size()-1].begin(),B[A.size()-1].end());
        
    }
};