class Solution {
public:
    int knightDialer(int N) {
        long long int dp[10][N+1];
        for(int i=0;i<=9;i++){
            dp[i][1]=1;
        }
        for(int i=2;i<=N;i++){
            dp[1][i]=(dp[6][i-1]+dp[8][i-1])%1000000007;
            dp[2][i]=(dp[7][i-1]+dp[9][i-1])%1000000007;
            dp[3][i]=(dp[4][i-1]+dp[8][i-1])%1000000007;
            dp[4][i]=(dp[3][i-1]+dp[9][i-1]+dp[0][i-1])%1000000007;
            dp[5][i]=0;
            dp[6][i]=(dp[7][i-1]+dp[1][i-1]+dp[0][i-1])%1000000007;
            dp[7][i]=(dp[6][i-1]+dp[2][i-1])%1000000007;
            dp[8][i]=(dp[1][i-1]+dp[3][i-1])%1000000007;
            dp[9][i]=(dp[4][i-1]+dp[2][i-1])%1000000007;
            dp[0][i]=(dp[4][i-1]+dp[6][i-1])%1000000007;
            
        }
        long long sum=0;
        for(int i=0;i<=9;i++){
            sum=sum+dp[i][N];
        }
        return sum%1000000007;
    }
};