class Solution {
public:
    int DP(vector<int>A,int dp[100][100][100],int l,int r,int k){
    if(l>r){
        return 0;
    }
    if(dp[l][r][k]){
        return dp[l][r][k];
    }
    while(l<r&&A[l]==A[l+1]){
        k++;
        l++;
    }
    dp[l][r][k]=DP(A,dp,l+1,r,0)+(k+1)*(k+1);
    for(int i=l+1;i<=r;i++){
        if(A[i]==A[l]){
            dp[l][r][k]=max(dp[l][r][k],DP(A,dp,l+1,i-1,0)+DP(A,dp,i,r,k+1));
        }
    }
    return dp[l][r][k];
}
    int removeBoxes(vector<int>& boxes) {
      int dp[100][100][100]={0};
      return DP(boxes,dp,0,boxes.size()-1,0);
    }
};
