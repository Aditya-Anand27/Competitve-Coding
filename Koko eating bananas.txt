class Solution {
public:
    int BS(int x,vector<int>A,int H){
        int sum=0;
        for(int i=0;i<A.size();i++){
            sum=sum+ceil(float(A[i]*1.0)/x*1.0);
        }
        cout<<sum<<" "<<x<<endl;
        if(sum<=H){
            return 1;
        }
        else{
            return 0;
        }
    }
    int minEatingSpeed(vector<int>& piles, int H) {
        int a=1;
        int b=*max_element(piles.begin(),piles.end());
        while(a<b){
            int mid=(a+b)/2;
            int c=BS(mid,piles,H);
            cout<<a<<" "<<b<<" "<<c<<endl;
            if(c==0){
                a=mid+1;
            }
            else{
                b=mid;
            }
        }
        return a;
    }
};